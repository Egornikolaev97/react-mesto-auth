{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from 'react';\nexport default function useFormValidation() {\n  _s();\n\n  let initialValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const [values, setValues] = useState(initialValues);\n  const [errors, setErrors] = useState([]);\n  const [isValid, setIsValid] = useState(true);\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setValues({ ...values,\n      [name]: value\n    });\n    setErrors({ ...errors,\n      [name]: event.target.validationMessage\n    });\n    setIsValid(event.target.closest('form').checkValidity());\n  }\n\n  const resetForm = useCallback(function () {\n    let newErrors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let newIsValid = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    setErrors(newErrors);\n    setIsValid(newIsValid);\n  }, [setErrors, setIsValid]);\n  return {\n    values,\n    errors,\n    isValid,\n    handleChange,\n    resetForm,\n    setValues,\n    setErrors,\n    setIsValid\n  };\n}\n\n_s(useFormValidation, \"SlsWlAr44UIkWCZIgOwA7B91cKQ=\");","map":{"version":3,"names":["useCallback","useState","useFormValidation","initialValues","values","setValues","errors","setErrors","isValid","setIsValid","handleChange","event","name","value","target","validationMessage","closest","checkValidity","resetForm","newErrors","newIsValid"],"sources":["C:/Users/Почисти меня/Desktop/dev/react-mesto-auth/src/hooks/useFormValidation.js"],"sourcesContent":["import { useCallback, useState } from 'react';\r\n\r\nexport default function useFormValidation(initialValues = {}) {\r\n  const [values, setValues] = useState(initialValues);\r\n  const [errors, setErrors] = useState([]);\r\n  const [isValid, setIsValid] = useState(true);\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setValues({ ...values, [name]: value });\r\n    setErrors({ ...errors, [name]: event.target.validationMessage });\r\n    setIsValid(event.target.closest('form').checkValidity());\r\n  }\r\n\r\n  const resetForm = useCallback(\r\n    (newErrors = {}, newIsValid = false) => {\r\n      setErrors(newErrors);\r\n      setIsValid(newIsValid);\r\n    },\r\n    [setErrors, setIsValid]\r\n  );\r\n\r\nreturn { values, errors, isValid, handleChange, resetForm, setValues, setErrors, setIsValid };\r\n}"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,eAAe,SAASC,iBAAT,GAA+C;EAAA;;EAAA,IAApBC,aAAoB,uEAAJ,EAAI;EAC5D,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAACE,aAAD,CAApC;EACA,MAAM,CAACG,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;;EAEA,SAASS,YAAT,CAAsBC,KAAtB,EAA6B;IAC3B,MAAM;MAAEC,IAAF;MAAQC;IAAR,IAAkBF,KAAK,CAACG,MAA9B;IACAT,SAAS,CAAC,EAAE,GAAGD,MAAL;MAAa,CAACQ,IAAD,GAAQC;IAArB,CAAD,CAAT;IACAN,SAAS,CAAC,EAAE,GAAGD,MAAL;MAAa,CAACM,IAAD,GAAQD,KAAK,CAACG,MAAN,CAAaC;IAAlC,CAAD,CAAT;IACAN,UAAU,CAACE,KAAK,CAACG,MAAN,CAAaE,OAAb,CAAqB,MAArB,EAA6BC,aAA7B,EAAD,CAAV;EACD;;EAED,MAAMC,SAAS,GAAGlB,WAAW,CAC3B,YAAwC;IAAA,IAAvCmB,SAAuC,uEAA3B,EAA2B;IAAA,IAAvBC,UAAuB,uEAAV,KAAU;IACtCb,SAAS,CAACY,SAAD,CAAT;IACAV,UAAU,CAACW,UAAD,CAAV;EACD,CAJ0B,EAK3B,CAACb,SAAD,EAAYE,UAAZ,CAL2B,CAA7B;EAQF,OAAO;IAAEL,MAAF;IAAUE,MAAV;IAAkBE,OAAlB;IAA2BE,YAA3B;IAAyCQ,SAAzC;IAAoDb,SAApD;IAA+DE,SAA/D;IAA0EE;EAA1E,CAAP;AACC;;GArBuBP,iB"},"metadata":{},"sourceType":"module"}