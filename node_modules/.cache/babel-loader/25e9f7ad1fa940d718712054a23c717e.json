{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041F\\u043E\\u0447\\u0438\\u0441\\u0442\\u0438 \\u043C\\u0435\\u043D\\u044F\\\\Desktop\\\\dev\\\\react-mesto-auth\\\\src\\\\Components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport ImagePopup from './ImagePopup';\nimport avatarPreloader from '../images/avatarka.jpg';\nimport api from '../utils/Api.js';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute';\nimport Login from './Login';\nimport Register from './Register';\nimport * as auth from '../utils/auth';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const navigate = useNavigate(); //states variables of components\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [cardToDelete, setCardToDelete] = React.useState([]);\n  const [cards, setCards] = React.useState([]);\n  const [currentUser, setCurrentUser] = React.useState({\n    name: 'Загрузка',\n    about: '...',\n    avatar: avatarPreloader\n  }); //get user information and inital cards from the server\n\n  React.useEffect(() => {\n    if (loggedIn) {\n      Promise.all([api.getUserInfo(), api.getInitialCards()]).then(_ref => {\n        let [userData, userCard] = _ref;\n        setCurrentUser(userData);\n        setCards(userCard);\n        navigate('/');\n      }).catch(err => console.log(`Ошибка: ${err}`));\n    }\n  }, [loggedIn]);\n\n  const handleSignUp = _ref2 => {\n    let {\n      email,\n      password\n    } = _ref2;\n    return auth.register({\n      email,\n      password\n    }).then(res => {\n      navigate('/sign-in');\n      return res;\n    }).catch(err => console.log(err));\n  }; //functions for openning popups\n\n\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard(card);\n  };\n\n  const confirmCardDelete = card => {\n    setCardToDelete(card);\n    setIsConfirmPopupOpen(true);\n  }; //function for setting like to card\n\n\n  const handleCardLike = card => {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.toggleLikeStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(err));\n  }; //function for deleting card\n\n\n  const handleCardDelete = card => {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }; //function for editing user info\n\n\n  const handleUpdateUser = data => {\n    api.editUserInfo(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }; //function for edtiting user avatar\n\n\n  const handleUpdateAvatar = data => {\n    api.editAvatar(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }; //function for adding cards\n\n\n  const handleAddCards = data => {\n    api.addCard(data).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }; //function for closing popups\n\n\n  const closeAllPopups = () => {\n    setEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsConfirmPopupOpen(false);\n    setSelectedCard(null);\n    setCardToDelete(null);\n  }; // const handle\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            component: Main,\n            loggedIn: loggedIn,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onEditAvatar: handleEditAvatarClick,\n            onCardClick: handleCardClick,\n            onCardLike: handleCardLike,\n            onCardDelete: confirmCardDelete,\n            cards: cards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            component: Footer,\n            loggedIn: loggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmDeletePopup, {\n        isOpen: isConfirmPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateAvatar,\n        onConfirm: handleCardDelete,\n        card: cardToDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"b7YfY89eKRISguJ8GXetf5VvvpA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Header","Main","Footer","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ConfirmDeletePopup","ImagePopup","avatarPreloader","api","Route","Routes","useNavigate","ProtectedRoute","Login","Register","auth","CurrentUserContext","App","navigate","isEditProfilePopupOpen","setEditProfilePopupOpen","useState","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","loggedIn","setLoggedIn","selectedCard","setSelectedCard","cardToDelete","setCardToDelete","cards","setCards","currentUser","setCurrentUser","name","about","avatar","useEffect","Promise","all","getUserInfo","getInitialCards","then","userData","userCard","catch","err","console","log","handleSignUp","email","password","register","res","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleCardClick","card","confirmCardDelete","handleCardLike","isLiked","likes","some","i","_id","toggleLikeStatus","newCard","state","map","c","handleCardDelete","deleteCard","filter","closeAllPopups","handleUpdateUser","data","editUserInfo","handleUpdateAvatar","editAvatar","handleAddCards","addCard"],"sources":["C:/Users/Почисти меня/Desktop/dev/react-mesto-auth/src/Components/App.js"],"sourcesContent":["import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\r\nimport ImagePopup from './ImagePopup';\r\nimport avatarPreloader from '../images/avatarka.jpg';\r\nimport api from '../utils/Api.js';\r\nimport { Route, Routes, useNavigate } from 'react-router-dom';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport * as auth from '../utils/auth'\r\n\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nconst App = () => {\r\n  const navigate = useNavigate();\r\n  //states variables of components\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\r\n\r\n  const [loggedIn, setLoggedIn] = React.useState(false);\r\n\r\n  const [selectedCard, setSelectedCard] = React.useState(null);\r\n  const [cardToDelete, setCardToDelete] = React.useState([]);\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n  const [currentUser, setCurrentUser] = React.useState({\r\n    name: 'Загрузка',\r\n    about: '...',\r\n    avatar: avatarPreloader,\r\n  });\r\n\r\n  //get user information and inital cards from the server\r\n  React.useEffect(() => {\r\n    if (loggedIn) {\r\n      Promise.all([api.getUserInfo(), api.getInitialCards()])\r\n      .then(([userData, userCard]) => {\r\n        setCurrentUser(userData);\r\n        setCards(userCard);\r\n        navigate('/');\r\n      })\r\n      .catch((err) => console.log(`Ошибка: ${err}`));\r\n    }\r\n  }, [loggedIn]);\r\n\r\n  const handleSignUp = ({email, password}) => {\r\n    return auth.register({email, password})\r\n    .then((res) => {\r\n      navigate('/sign-in');\r\n      return res;\r\n    }).catch((err) => console.log(err))\r\n  }\r\n\r\n  //functions for openning popups\r\n  const handleEditProfileClick = () => {\r\n    setEditProfilePopupOpen(true);\r\n  };\r\n\r\n  const handleAddPlaceClick = () => {\r\n    setIsAddPlacePopupOpen(true);\r\n  };\r\n\r\n  const handleEditAvatarClick = () => {\r\n    setIsEditAvatarPopupOpen(true);\r\n  };\r\n\r\n  const handleCardClick = (card) => {\r\n    setSelectedCard(card);\r\n  };\r\n\r\n  const confirmCardDelete = (card) => {\r\n    setCardToDelete(card);\r\n    setIsConfirmPopupOpen(true);\r\n  };\r\n\r\n  //function for setting like to card\r\n  const handleCardLike = (card) => {\r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n    api\r\n      .toggleLikeStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  //function for deleting card\r\n  const handleCardDelete = (card) => {\r\n    api\r\n      .deleteCard(card._id)\r\n      .then(() => {\r\n        setCards((state) => state.filter((c) => c._id !== card._id));\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  //function for editing user info\r\n  const handleUpdateUser = (data) => {\r\n    api\r\n      .editUserInfo(data)\r\n      .then((res) => {\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  //function for edtiting user avatar\r\n  const handleUpdateAvatar = (data) => {\r\n    api\r\n      .editAvatar(data)\r\n      .then((res) => {\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  //function for adding cards\r\n  const handleAddCards = (data) => {\r\n    api\r\n      .addCard(data)\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards]);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n\r\n\r\n  //function for closing popups\r\n  const closeAllPopups = () => {\r\n    setEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsConfirmPopupOpen(false);\r\n    setSelectedCard(null);\r\n    setCardToDelete(null);\r\n  };\r\n\r\n  // const handle\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n        <Header />\r\n\r\n        <Routes>\r\n          <Route\r\n          path=\"/\"\r\n          element={\r\n            <ProtectedRoute\r\n            component={Main}\r\n            loggedIn={loggedIn}\r\n            onEditProfile={handleEditProfileClick}\r\n            onAddPlace={handleAddPlaceClick}\r\n            onEditAvatar={handleEditAvatarClick}\r\n            onCardClick={handleCardClick}\r\n            onCardLike={handleCardLike}\r\n            onCardDelete={confirmCardDelete}\r\n            cards={cards}\r\n            />\r\n          }\r\n          />\r\n          <Route\r\n          path=\"/\"\r\n          element={<ProtectedRoute component={Footer} loggedIn={loggedIn}/>}\r\n          />\r\n\r\n          <Route path=\"/sign-in\" element={<Login />}\r\n          />\r\n          <Route path=\"/sign-up\" element={<Register />} />\r\n\r\n        </Routes>\r\n\r\n        {/* <Footer /> */}\r\n        <EditProfilePopup\r\n        isOpen={isEditProfilePopupOpen}\r\n        onClose={closeAllPopups}\r\n        onUpdateUser={handleUpdateUser} />\r\n\r\n        <AddPlacePopup\r\n        isOpen={isAddPlacePopupOpen}\r\n        onClose={closeAllPopups}\r\n        onAddPlace={handleAddCards} />\r\n\r\n        <EditAvatarPopup\r\n        isOpen={isEditAvatarPopupOpen}\r\n        onClose={closeAllPopups}\r\n        onUpdateUser={handleUpdateAvatar} />\r\n\r\n        <ConfirmDeletePopup\r\n        isOpen={isConfirmPopupOpen}\r\n        onClose={closeAllPopups}\r\n        onUpdateUser={handleUpdateAvatar}\r\n        onConfirm={handleCardDelete}\r\n        card={cardToDelete} />\r\n\r\n        <ImagePopup\r\n        card={selectedCard}\r\n        onClose={closeAllPopups} />\r\n      </CurrentUserContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}