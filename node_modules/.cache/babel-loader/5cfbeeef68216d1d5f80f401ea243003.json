{"ast":null,"code":"export const baseUrl = 'https://auth.nomoreparties.co';\n\nconst checkResponse = res => {\n  if (res.ok) {\n    return res.json();\n  } else {\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n}; // const checkResponse = (res) => {\n//     return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n//     }\n\n\nexport const register = _ref => {\n  let {\n    email,\n    password\n  } = _ref;\n  return fetch(`${baseUrl}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse);\n};\nexport const login = _ref2 => {\n  let {\n    email,\n    password\n  } = _ref2;\n  return fetch(`${baseUrl}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse);\n};\nexport const checkToken = token => {\n  return fetch(`${baseUrl}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(checkResponse);\n};","map":{"version":3,"names":["baseUrl","checkResponse","res","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","login","checkToken","token"],"sources":["C:/Users/Почисти меня/Desktop/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const baseUrl = 'https://auth.nomoreparties.co';\r\n\r\nconst checkResponse = (res) => {\r\n    if (res.ok) {\r\n        return res.json();\r\n    } else {\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n}\r\n\r\n// const checkResponse = (res) => {\r\n//     return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\r\n//     }\r\n\r\n\r\n    export const register = ({email, password}) => {\r\n        return fetch(`${baseUrl}/signup`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ email, password })\r\n        })\r\n    .then(checkResponse);\r\n};\r\n\r\nexport const login = ({email, password}) => {\r\n    return fetch(`${baseUrl}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ email, password })\r\n    })\r\n    .then(checkResponse);\r\n};\r\n\r\nexport const checkToken = (token) => {\r\n    return fetch(`${baseUrl}/users/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\" : `Bearer ${token}`\r\n      }\r\n    })\r\n    .then(checkResponse)\r\n};\r\n\r\n\r\n"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,+BAAhB;;AAEP,MAAMC,aAAa,GAAIC,GAAD,IAAS;EAC3B,IAAIA,GAAG,CAACC,EAAR,EAAY;IACR,OAAOD,GAAG,CAACE,IAAJ,EAAP;EACH,CAFD,MAEO;IACH,OAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;EACH;AACJ,CAND,C,CAQA;AACA;AACA;;;AAGI,OAAO,MAAMC,QAAQ,GAAG,QAAuB;EAAA,IAAtB;IAACC,KAAD;IAAQC;EAAR,CAAsB;EAC3C,OAAOC,KAAK,CAAE,GAAEX,OAAQ,SAAZ,EAAsB;IAChCY,MAAM,EAAE,MADwB;IAEhCC,OAAO,EAAE;MACP,UAAU,kBADH;MAEP,gBAAgB;IAFT,CAFuB;IAMhCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEP,KAAF;MAASC;IAAT,CAAf;EAN0B,CAAtB,CAAL,CAQVO,IARU,CAQLhB,aARK,CAAP;AASP,CAVU;AAYX,OAAO,MAAMiB,KAAK,GAAG,SAAuB;EAAA,IAAtB;IAACT,KAAD;IAAQC;EAAR,CAAsB;EACxC,OAAOC,KAAK,CAAE,GAAEX,OAAQ,SAAZ,EAAsB;IAC9BY,MAAM,EAAE,MADsB;IAE9BC,OAAO,EAAE;MACL,gBAAgB;IADX,CAFqB;IAK9BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEP,KAAF;MAASC;IAAT,CAAf;EALwB,CAAtB,CAAL,CAONO,IAPM,CAODhB,aAPC,CAAP;AAQH,CATM;AAWP,OAAO,MAAMkB,UAAU,GAAIC,KAAD,IAAW;EACjC,OAAOT,KAAK,CAAE,GAAEX,OAAQ,WAAZ,EAAwB;IAClCY,MAAM,EAAE,KAD0B;IAElCC,OAAO,EAAE;MACP,UAAU,kBADH;MAEP,gBAAgB,kBAFT;MAGP,iBAAmB,UAASO,KAAM;IAH3B;EAFyB,CAAxB,CAAL,CAQNH,IARM,CAQDhB,aARC,CAAP;AASH,CAVM"},"metadata":{},"sourceType":"module"}