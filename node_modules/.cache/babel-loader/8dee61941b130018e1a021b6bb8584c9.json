{"ast":null,"code":"export const baseUrl = 'https://auth.nomoreparties.co'; // const checkResponse = (res) => {\n//     if (res.ok) {\n//         return res.json();\n//     } else {\n//         return Promise.reject(`Ошибка: ${res.status}`);\n//     }\n// }\n\nconst checkResponse = res => {\n  return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n};\n\nexport const register = _ref => {\n  let {\n    email,\n    password\n  } = _ref;\n  return fetch(`${baseUrl}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse);\n};\nexport const login = _ref2 => {\n  let {\n    email,\n    password\n  } = _ref2;\n  return fetch(`${baseUrl}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse);\n};\nexport const checkToken = jwt => {\n  return fetch(`${baseUrl}/user/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${jwt}`\n    }\n  }).then(checkResponse);\n};","map":{"version":3,"names":["baseUrl","checkResponse","res","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","login","checkToken","jwt"],"sources":["C:/Users/Почисти меня/Desktop/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const baseUrl = 'https://auth.nomoreparties.co';\r\n\r\n// const checkResponse = (res) => {\r\n//     if (res.ok) {\r\n//         return res.json();\r\n//     } else {\r\n//         return Promise.reject(`Ошибка: ${res.status}`);\r\n//     }\r\n// }\r\n\r\nconst checkResponse = (res) => {\r\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n\r\n\r\n    export const register = ({email, password}) => {\r\n        return fetch(`${baseUrl}/signup`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ email, password })\r\n        })\r\n    .then(checkResponse);\r\n};\r\n\r\nexport const login = ({email, password}) => {\r\n    return fetch(`${baseUrl}/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ email, password })\r\n    })\r\n    .then(checkResponse);\r\n};\r\n\r\nexport const checkToken = (jwt) => {\r\n    return fetch(`${baseUrl}/user/me`, {\r\n      method: 'GET',\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Authorization\" : `Bearer ${jwt}`\r\n      }\r\n    })\r\n    .then(checkResponse);\r\n};\r\n\r\n\r\n"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,+BAAhB,C,CAEP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,aAAa,GAAIC,GAAD,IAAS;EAC3B,OAAOA,GAAG,CAACC,EAAJ,GAASD,GAAG,CAACE,IAAJ,EAAT,GAAsBC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAA7B;AACC,CAFL;;AAKI,OAAO,MAAMC,QAAQ,GAAG,QAAuB;EAAA,IAAtB;IAACC,KAAD;IAAQC;EAAR,CAAsB;EAC3C,OAAOC,KAAK,CAAE,GAAEX,OAAQ,SAAZ,EAAsB;IAChCY,MAAM,EAAE,MADwB;IAEhCC,OAAO,EAAE;MACP,UAAU,kBADH;MAEP,gBAAgB;IAFT,CAFuB;IAMhCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEP,KAAF;MAASC;IAAT,CAAf;EAN0B,CAAtB,CAAL,CAQVO,IARU,CAQLhB,aARK,CAAP;AASP,CAVU;AAYX,OAAO,MAAMiB,KAAK,GAAG,SAAuB;EAAA,IAAtB;IAACT,KAAD;IAAQC;EAAR,CAAsB;EACxC,OAAOC,KAAK,CAAE,GAAEX,OAAQ,SAAZ,EAAsB;IAC9BY,MAAM,EAAE,MADsB;IAE9BC,OAAO,EAAE;MACL,gBAAgB;IADX,CAFqB;IAK9BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEP,KAAF;MAASC;IAAT,CAAf;EALwB,CAAtB,CAAL,CAONO,IAPM,CAODhB,aAPC,CAAP;AAQH,CATM;AAWP,OAAO,MAAMkB,UAAU,GAAIC,GAAD,IAAS;EAC/B,OAAOT,KAAK,CAAE,GAAEX,OAAQ,UAAZ,EAAuB;IACjCY,MAAM,EAAE,KADyB;IAEjCC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEP,iBAAmB,UAASO,GAAI;IAFzB;EAFwB,CAAvB,CAAL,CAONH,IAPM,CAODhB,aAPC,CAAP;AAQH,CATM"},"metadata":{},"sourceType":"module"}